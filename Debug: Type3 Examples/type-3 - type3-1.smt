----------------------------OCA  INPUT----------------------------
InitState: 0
TargetState: 1
State: 0 
(0,sub,1)
(0,add,2)
State: 1 
(1,sub,3)
State: 2 
(2,add,0)
State: 3 
(3,sub,1)

------------------------------------------------------------------
--------------------------FORMULA OUTPUT--------------------------
(let ((a!1 (exists ((v_o_2 Int) (v_i_1 Int))
             (let ((a!1 (and (= (- v_i_1 v_o_2) (- 1)) (or false (= xs v_o_2))))
                   (a!2 (or (= v_i_1 xt)
                            (and (= xt (+ v_i_1 (- 2))) (>= (+ v_i_1 (- 2)) 0))
                            (and (= xt (+ v_i_1 (- 4))) (>= (+ v_i_1 (- 4)) 0))
                            (and (= xt (+ v_i_1 (- 6))) (>= (+ v_i_1 (- 6)) 0))))
                   (a!3 (exists ((z3 Int))
                          (let ((a!1 (exists ((z1 Int))
                                       (let ((a!1 (exists ((f_1_3 Int)
                                                           (f_3_1 Int))
                                                    (and (= (+ f_1_3 0)
                                                            (+ f_3_1 0))
                                                         (= (+ f_3_1 0)
                                                            (+ f_1_3 0))
                                                         (= (+ f_3_1 0)
                                                            (+ f_1_3 0))
                                                         (= (+ 0
                                                               (* (- 1) f_1_3)
                                                               (* (- 1) f_3_1))
                                                            (- z1 v_i_1))
                                                         (and true
                                                              (>= f_1_3 0)
                                                              (>= f_3_1 0)))))
                                             (a!2 (or (= z1 xt)
                                                      (and (= xt (+ z1 (- 2)))
                                                           (>= (+ z1 (- 2)) 0))
                                                      (and (= xt (+ z1 (- 4)))
                                                           (>= (+ z1 (- 4)) 0))
                                                      (and (= xt (+ z1 (- 6)))
                                                           (>= (+ z1 (- 6)) 0)))))
                                         (and (>= z1 0)
                                              (or false (and a!1 (>= z1 2) a!2))
                                              (= (- v_i_1 v_o_2) (- 1))))))
                                (a!2 (exists ((f_1_3 Int) (f_3_1 Int))
                                       (and (= (+ (+ f_3_1 0) 1) (+ f_1_3 0))
                                            (= (+ f_1_3 0) (+ (+ f_3_1 0) 1))
                                            (= (+ 0
                                                  (* (- 1) f_1_3)
                                                  (* (- 1) f_3_1))
                                               (- z3 v_i_1))
                                            (and true (>= f_1_3 0) (>= f_3_1 0)))))
                                (a!3 (or false
                                         (and (= xt (+ z3 (- 1)))
                                              (>= (+ z3 (- 1)) 0))
                                         (and (= xt (+ z3 (- 3)))
                                              (>= (+ z3 (- 3)) 0))
                                         (and (= xt (+ z3 (- 5)))
                                              (>= (+ z3 (- 5)) 0))
                                         (and (= xt (+ z3 (- 7)))
                                              (>= (+ z3 (- 7)) 0))
                                         (and (= xt (+ z3 (- 9)))
                                              (>= (+ z3 (- 9)) 0)))))
                            (and (>= z3 0)
                                 (or a!1 (and a!2 (>= z3 2) a!3))
                                 (= (- v_i_1 v_o_2) (- 1))))))
                   (a!4 (and (= (- v_i_1 v_o_2) (- 1)) (or false (= v_i_1 xt)))))
             (let ((a!5 (or (and a!2 (= (- v_i_1 v_o_2) (- 1)))
                            a!3
                            a!4
                            a!4
                            a!4
                            false)))
               (and (or false (and true (or a!1 a!1 a!1 false) a!5))
                    (and true (>= v_o_2 0) (>= v_i_1 0)))))))
      (a!2 (exists ((v_o_1 Int) (v_i_2 Int))
             (let ((a!1 (and (= (- v_i_2 v_o_1) 1) (or false (= xt v_o_1))))
                   (a!2 (or (= v_i_2 xs)
                            (and (= xs (+ v_i_2 (- 2))) (>= (+ v_i_2 (- 2)) 0))
                            (and (= xs (+ v_i_2 (- 4))) (>= (+ v_i_2 (- 4)) 0))
                            (and (= xs (+ v_i_2 (- 6))) (>= (+ v_i_2 (- 6)) 0))))
                   (a!3 (exists ((z2 Int))
                          (let ((a!1 (exists ((z0 Int))
                                       (let ((a!1 (exists ((f_0_2 Int)
                                                           (f_2_0 Int))
                                                    (and (= (+ f_0_2 0)
                                                            (+ f_2_0 0))
                                                         (= (+ f_2_0 0)
                                                            (+ f_0_2 0))
                                                         (= (+ f_2_0 0)
                                                            (+ f_0_2 0))
                                                         (= (+ 0
                                                               (* (- 1) f_0_2)
                                                               (* (- 1) f_2_0))
                                                            (- z0 v_i_2))
                                                         (and true
                                                              (>= f_0_2 0)
                                                              (>= f_2_0 0)))))
                                             (a!2 (or (= z0 xs)
                                                      (and (= xs (+ z0 (- 2)))
                                                           (>= (+ z0 (- 2)) 0))
                                                      (and (= xs (+ z0 (- 4)))
                                                           (>= (+ z0 (- 4)) 0))
                                                      (and (= xs (+ z0 (- 6)))
                                                           (>= (+ z0 (- 6)) 0)))))
                                         (and (>= z0 0)
                                              (or false (and a!1 (>= z0 2) a!2))
                                              (= (- v_i_2 v_o_1) 1)))))
                                (a!2 (exists ((f_0_2 Int) (f_2_0 Int))
                                       (and (= (+ (+ f_2_0 0) 1) (+ f_0_2 0))
                                            (= (+ f_0_2 0) (+ (+ f_2_0 0) 1))
                                            (= (+ 0
                                                  (* (- 1) f_0_2)
                                                  (* (- 1) f_2_0))
                                               (- z2 v_i_2))
                                            (and true (>= f_0_2 0) (>= f_2_0 0)))))
                                (a!3 (or false
                                         (and (= xs (+ z2 (- 1)))
                                              (>= (+ z2 (- 1)) 0))
                                         (and (= xs (+ z2 (- 3)))
                                              (>= (+ z2 (- 3)) 0))
                                         (and (= xs (+ z2 (- 5)))
                                              (>= (+ z2 (- 5)) 0))
                                         (and (= xs (+ z2 (- 7)))
                                              (>= (+ z2 (- 7)) 0))
                                         (and (= xs (+ z2 (- 9)))
                                              (>= (+ z2 (- 9)) 0)))))
                            (and (>= z2 0)
                                 (or a!1 (and a!2 (>= z2 2) a!3))
                                 (= (- v_i_2 v_o_1) 1)))))
                   (a!4 (and (= (- v_i_2 v_o_1) 1) (or false (= v_i_2 xs)))))
             (let ((a!5 (or (and a!2 (= (- v_i_2 v_o_1) 1))
                            a!3
                            a!4
                            a!4
                            a!4
                            false)))
               (and (or false (and true (or a!1 a!1 a!1 false) a!5))
                    (and true (>= v_o_1 0) (>= v_i_2 0)))))))
      (a!3 (exists ((vm_3_s Int) (vm_3_e Int))
             (let ((a!1 (or false
                            false
                            (and (>= (+ xs 0) 0) (= (+ xs 2) vm_3_s))
                            (and (>= (+ xs 0) 0) (= (+ xs 1) vm_3_s))
                            false))
                   (a!2 (or false
                            (and (>= (+ xt 0) 0) (= (+ xt 2) vm_3_e))
                            false
                            false
                            (and (>= (+ xt 0) 0) (= (+ xt 1) vm_3_e)))))
               (and a!1 a!2 (and true (>= vm_3_s 0) (>= vm_3_e 0))))))
      (a!4 (exists ((f_1_3 Int) (f_0_1 Int) (f_0_2 Int) (f_2_0 Int) (f_3_1 Int))
             (and (= (+ f_1_3 0) (+ f_3_1 0))
                  (= (+ f_0_2 0) (+ f_2_0 0))
                  (= (+ (+ f_2_0 0) 1) (+ f_0_2 (+ f_0_1 0)))
                  (= (+ f_3_1 (+ f_0_1 0)) (+ (+ f_1_3 0) 1))
                  (= (+ 0
                        (* (- 1) f_1_3)
                        (* (- 1) f_0_1)
                        (* 1 f_0_2)
                        (* 1 f_2_0)
                        (* (- 1) f_3_1))
                     (- xt xs))
                  true
                  (>= f_1_3 0)
                  (>= f_0_1 0)
                  (>= f_0_2 0)
                  (>= f_2_0 0)
                  (>= f_3_1 0))))
      (a!6 (exists ((i Int) (j Int))
             (let ((a!1 (= xt (- (+ xs (* (- 2) j) (* 2 i) 0) (- 1)))))
               (and a!1 (>= i 0) (>= xt 0) (>= xs 0))))))
(let ((a!5 (and (or false a!1 a!2 (and a!3 a!4)) (>= xs 0) (>= xt 0))))
  (not (and (=> a!5 a!6) (=> a!6 a!5)))))
------------------------------------------------------------------s
